create table "public"."authors" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "deleted_at" timestamp with time zone,
    "persona_id" bigint,
    "user_id" uuid
);


alter table "public"."authors" enable row level security;

create type assistant_type as enum ('log', 'error');

create table "public"."messages" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone default now(),
    "deleted_at" timestamp with time zone,
    "chat_id" text,
    "from_id" bigint,
    "to_id" bigint,
    "content" text,
    "function_call" jsonb,
    type assistant_type
);


alter table "public"."messages" enable row level security;

CREATE UNIQUE INDEX authors_pkey ON public.authors USING btree (id);

CREATE UNIQUE INDEX messages_pkey ON public.messages USING btree (id);

alter table "public"."authors" add constraint "authors_pkey" PRIMARY KEY using index "authors_pkey";

alter table "public"."messages" add constraint "messages_pkey" PRIMARY KEY using index "messages_pkey";

alter table "public"."authors" add constraint "authors_persona_id_fkey" FOREIGN KEY (persona_id) REFERENCES personas(id) ON DELETE CASCADE not valid;

alter table "public"."authors" validate constraint "authors_persona_id_fkey";

alter table "public"."authors" add constraint "authors_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE not valid;

alter table "public"."authors" validate constraint "authors_user_id_fkey";

alter table "public"."messages" add constraint "messages_chat_id_fkey" FOREIGN KEY (chat_id) REFERENCES chats(id) ON DELETE CASCADE not valid;

alter table "public"."messages" validate constraint "messages_chat_id_fkey";

alter table "public"."messages" add constraint "messages_from_id_fkey" FOREIGN KEY (from_id) REFERENCES authors(id) not valid;

alter table "public"."messages" validate constraint "messages_from_id_fkey";

alter table "public"."messages" add constraint "messages_to_id_fkey" FOREIGN KEY (to_id) REFERENCES authors(id) not valid;

alter table "public"."messages" validate constraint "messages_to_id_fkey";


